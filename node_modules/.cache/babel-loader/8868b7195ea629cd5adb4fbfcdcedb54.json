{"ast":null,"code":"var _jsxFileName = \"/home/akhil/roman-numeral-converter/src/components/Root.jsx\";\nimport React, { Component } from 'react';\nimport Conversion from './Conversion';\nimport '../style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst convertNatural = new Conversion();\n\nclass Root extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      natural: '',\n      roman: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        // console.log('I am pressed')\n        this.setState({\n          roman: convertNatural.convertRoman(this.state.natural),\n          natural: ''\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        roman: convertNatural.convertRoman(this.state.natural),\n        natural: ''\n      }); // console.log(this.convert(this.state.natural))\n      // console.log(this.state.roman)\n    };\n  }\n\n  componentDidMount() {\n    convertNatural.convertRoman(this.state.natural);\n  }\n\n  // convert = natural => {\n  //     const roman = {\n  //         1: 'I',\n  //         2: 'II',\n  //         3: 'III',\n  //         4: 'IV',\n  //         5: 'V',\n  //         6: 'VI',\n  //         7: 'VII',\n  //         8: 'VIII',\n  //         9: 'IX',\n  //         10: 'X',\n  //         20: 'XX',\n  //         30: 'XXX',\n  //         40: 'XL',\n  //         50: 'L',\n  //         60: 'LX',\n  //         70: 'LXX',\n  //         80: 'LXXX',\n  //         90: 'XC',\n  //         100: 'C',\n  //         200: 'CC',\n  //         300: 'CCC',\n  //         400: 'CD',\n  //         500: 'D',\n  //         600: 'DC',\n  //         700: 'DCC',\n  //         800: 'DCCC',\n  //         900: 'CM',\n  //         1000: 'M',\n  //         2000: 'MM',\n  //         3000: 'MMM'\n  //     }\n  //     let str = String(natural).split('')\n  //     let result = ''\n  //     for (let i = 0; i < str.length; i++) {\n  //         var lookup = str[i] * Math.pow(10, str.length - i - 1)\n  //         if (roman[lookup]) {\n  //             result += roman[lookup]\n  //         }\n  //     }\n  //     return result\n  // }\n  render() {\n    // console.log(this.state.natural)\n    // console.log(this.convert(this.state.natural))\n    const {\n      natural,\n      roman\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root-container  d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-body w-md-50 bg-light p-5 rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"natural\",\n                children: \"Enter natural number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"natural\",\n                id: \"natural\",\n                className: \"form-control\",\n                value: natural,\n                onChange: this.handleChange,\n                onKeyPress: this.handleKeyPress,\n                placeholder: \"Ex: 123\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                className: \"btn btn-sm btn-success\",\n                onClick: this.handleSubmit,\n                value: \"Convert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"roman\",\n                children: \"Coverted roman numeral\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                disabled: true,\n                type: \"text\",\n                name: \"roman\",\n                id: \"roman\",\n                className: \"form-control\",\n                value: roman\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Root;","map":{"version":3,"sources":["/home/akhil/roman-numeral-converter/src/components/Root.jsx"],"names":["React","Component","Conversion","convertNatural","Root","state","natural","roman","handleChange","e","setState","target","name","value","handleKeyPress","key","convertRoman","handleSubmit","preventDefault","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Conversion from './Conversion'\nimport '../style/style.css'\n\nconst convertNatural = new Conversion();\n\nclass Root extends Component {\n    state = {\n        natural: '',\n        roman: ''\n    }\n\n    componentDidMount() {\n        convertNatural.convertRoman(this.state.natural)\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            // console.log('I am pressed')\n            this.setState({\n                roman: convertNatural.convertRoman(this.state.natural),\n                natural: ''\n            })\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.setState({\n            roman: convertNatural.convertRoman((this.state.natural)),\n            natural: ''\n        })\n        // console.log(this.convert(this.state.natural))\n        // console.log(this.state.roman)\n    }\n\n    // convert = natural => {\n    //     const roman = {\n    //         1: 'I',\n    //         2: 'II',\n    //         3: 'III',\n    //         4: 'IV',\n    //         5: 'V',\n    //         6: 'VI',\n    //         7: 'VII',\n    //         8: 'VIII',\n    //         9: 'IX',\n    //         10: 'X',\n    //         20: 'XX',\n    //         30: 'XXX',\n    //         40: 'XL',\n    //         50: 'L',\n    //         60: 'LX',\n    //         70: 'LXX',\n    //         80: 'LXXX',\n    //         90: 'XC',\n    //         100: 'C',\n    //         200: 'CC',\n    //         300: 'CCC',\n    //         400: 'CD',\n    //         500: 'D',\n    //         600: 'DC',\n    //         700: 'DCC',\n    //         800: 'DCCC',\n    //         900: 'CM',\n    //         1000: 'M',\n    //         2000: 'MM',\n    //         3000: 'MMM'\n\n    //     }\n    //     let str = String(natural).split('')\n    //     let result = ''\n    //     for (let i = 0; i < str.length; i++) {\n    //         var lookup = str[i] * Math.pow(10, str.length - i - 1)\n    //         if (roman[lookup]) {\n    //             result += roman[lookup]\n    //         }\n    //     }\n    //     return result\n    // }\n\n    render() {\n        // console.log(this.state.natural)\n        // console.log(this.convert(this.state.natural))\n        const { natural, roman } = this.state\n        return (\n            <div className='container'>\n                <div className=\"root-container  d-flex justify-content-center\">\n                    <div className=\"main-body w-md-50 bg-light p-5 rounded\">\n                        <form>\n                            <div className='form-group'>\n                                <label htmlFor='natural'>Enter natural number</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"natural\"\n                                    id=\"natural\"\n                                    className='form-control'\n                                    value={natural}\n                                    onChange={this.handleChange}\n                                    onKeyPress={this.handleKeyPress}\n                                    placeholder='Ex: 123'\n                                />\n                            </div>\n                            <div className='form-group my-3'>\n                                <input\n                                    type=\"button\"\n                                    className='btn btn-sm btn-success'\n                                    onClick={this.handleSubmit}\n                                    value=\"Convert\"\n                                />\n                                {/* //TODO:Swap */}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor='roman'>Coverted roman numeral</label>\n                                <input\n                                    disabled\n                                    type=\"text\"\n                                    name=\"roman\"\n                                    id=\"roman\"\n                                    className='form-control'\n                                    value={roman}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Root\n"]},"metadata":{},"sourceType":"module"}