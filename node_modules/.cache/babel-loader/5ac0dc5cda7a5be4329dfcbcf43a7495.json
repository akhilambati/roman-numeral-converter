{"ast":null,"code":"const roman = {\n  1: 'I',\n  2: 'II',\n  3: 'III',\n  4: 'IV',\n  5: 'V',\n  6: 'VI',\n  7: 'VII',\n  8: 'VIII',\n  9: 'IX',\n  10: 'X',\n  20: 'XX',\n  30: 'XXX',\n  40: 'XL',\n  50: 'L',\n  60: 'LX',\n  70: 'LXX',\n  80: 'LXXX',\n  90: 'XC',\n  100: 'C',\n  200: 'CC',\n  300: 'CCC',\n  400: 'CD',\n  500: 'D',\n  600: 'DC',\n  700: 'DCC',\n  800: 'DCCC',\n  900: 'CM',\n  1000: 'M',\n  2000: 'MM',\n  3000: 'MMM'\n};\nlet my = {};\n\nfunction init() {\n  let version = '0.83';\n  let w = 360;\n  let h = 64;\n  let s = '';\n  s += '<div style=\"position:relative; width:' + w + 'px; height:' + h + 'px; background-color: #def; border: 2px solid #ddeeff; border-radius: 10px;  margin:auto; display:block;\">';\n  s += '<div style=\"margin-top: 10px; font: 16px arial; font-weight: bold; color: black; text-align:center;\">';\n  s += '<input id=\"val\" style=\"font-size: 20px; width:240px;  line-height: 26px;  text-align:center;\" />';\n  s += wrap({\n    tag: 'btn',\n    style: 'left:6px; bottom:3px',\n    fn: 'get()'\n  }, 'Convert'), s += '</div>';\n  s += wrap({\n    cls: 'copyrt',\n    pos: 'abs',\n    style: 'left:15px; bottom:3px'\n  }, `&copy; 2022 Rod Pierce  v${version}`);\n  s += '</div>';\n  docInsert(s);\n}\n\nfunction Level(i, v, x) {\n  this.i = i;\n  this.v = v;\n  this.x = x;\n}\n\n_c = Level;\nlet levels = [];\nlevels[0] = new Level('I', 'V', 'X');\nlevels[1] = new Level('X', 'L', 'C');\nlevels[2] = new Level('C', 'D', 'M');\n\nfunction calcDigit(d, l) {\n  if (l > 2) {\n    let str = '';\n\n    for (let m = 1; m <= d * Math.pow(10, l - 3); m++) str += 'M';\n\n    return str;\n  } else if (d == 1) return levels[l].i;else if (d == 2) return levels[l].i + levels[l].i;else if (d == 3) return levels[l].i + levels[l].i + levels[l].i;else if (d == 4) return levels[l].i + levels[l].v;else if (d == 5) return levels[l].v;else if (d == 6) return levels[l].v + levels[l].i;else if (d == 7) return levels[l].v + levels[l].i + levels[l].i;else if (d == 8) return levels[l].v + levels[l].i + levels[l].i + levels[l].i;else if (d == 9) return levels[l].i + levels[l].x;else return '';\n}\n\nfunction toRoman(n) {\n  let r = '';\n\n  for (let c = 0; c < n.length; c++) r += calcDigit(eval(n.charAt(c)), n.length - c - 1);\n\n  return r;\n}\n\nfunction toArabic(num) {\n  if (checkRomanInput(num)) {\n    let arabic = 0;\n    let last_digit = 1000;\n\n    for (let i = 0; i < num.length; i++) {\n      let digit = 0;\n\n      if (num.charAt(i) == 'I') {\n        digit = 1;\n      }\n\n      if (num.charAt(i) == 'V') {\n        digit = 5;\n      }\n\n      if (num.charAt(i) == 'X') {\n        digit = 10;\n      }\n\n      if (num.charAt(i) == 'L') {\n        digit = 50;\n      }\n\n      if (num.charAt(i) == 'C') {\n        digit = 100;\n      }\n\n      if (num.charAt(i) == 'D') {\n        digit = 500;\n      }\n\n      if (num.charAt(i) == 'M') {\n        digit = 1000;\n      }\n\n      if (last_digit < digit) {\n        arabic -= 2 * last_digit;\n      }\n\n      last_digit = digit;\n      arabic += last_digit;\n    }\n\n    return arabic;\n  } else {\n    return num;\n  }\n}\n\nfunction checkRomanInput(num) {\n  for (let k = 0; k < num.length; k++) {\n    if (num.charAt(k) != 'I' && num.charAt(k) != 'V' && num.charAt(k) != 'X' && num.charAt(k) != 'L' && num.charAt(k) != 'C' && num.charAt(k) != 'D' && num.charAt(k) != 'M') {\n      alert('Roman Numerals can only be I, V, X, L, C, D or M');\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isInt(s) {\n  return s == parseInt(s, 10);\n}\n\nfunction get() {\n  let div = document.getElementById('val');\n  let str = div.value;\n  str = str.replace(/[, ]+/g, '').trim();\n  let mode = 'toRoman';\n\n  if (!isInt(str)) {\n    for (let c = 0; c < str.length; c++) {\n      let chr = str.charAt(c).toLowerCase();\n\n      if (chr != 'i' && chr != 'v' && chr != 'x' && chr != 'l' && chr != 'c' && chr != 'd' && chr != 'm') {\n        alert('Only the letters IVXLCDM, please');\n        return false;\n      }\n    }\n\n    mode = 'fromRoman';\n  }\n\n  if (mode == 'toRoman') div.value = toRoman(str);else div.value = toArabic(str);\n  return false;\n}\n\nfunction docInsert(s) {\n  let div = document.createElement('div');\n  div.innerHTML = s;\n  let script = document.currentScript;\n  script.parentElement.insertBefore(div, script);\n}\n\nfunction wrap(_ref) {\n  let {\n    id = '',\n    cls = '',\n    pos = 'rel',\n    style = '',\n    txt = '',\n    tag = 'div',\n    lbl = '',\n    fn = '',\n    opts = []\n  } = _ref;\n  let s = '';\n  s += '\\n';\n\n  for (var _len = arguments.length, mores = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mores[_key - 1] = arguments[_key];\n  }\n\n  txt += mores.join('');\n  s += {\n    btn: () => {\n      if (cls.length == 0) cls = 'btn';\n      return '<button onclick=\"' + fn + '\"';\n    },\n    can: () => '<canvas',\n    div: () => '<div',\n    edit: () => {\n      let s = '';\n      s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : '';\n      s += '<textarea onkeyup=\"' + fn + '\" onchange=\"' + fn + '\"';\n      return s;\n    },\n    inp: () => {\n      if (cls.length == 0) cls = 'input';\n      let s = '';\n      s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : '';\n      s += '<input value=\"' + txt + '\"';\n      s += fn.length > 0 ? '  oninput=\"' + fn + '\" onchange=\"' + fn + '\"' : '';\n      return s;\n    },\n    out: () => {\n      pos = 'dib';\n      if (cls.length == 0) cls = 'output';\n      let s = '';\n      s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : '';\n      s += '<span ';\n      return s;\n    },\n    rad: () => {\n      if (cls.length == 0) cls = 'radio';\n      return '<form' + (fn.length > 0 ? s += ' onclick=\"' + fn + '\"' : '');\n    },\n    sel: () => {\n      if (cls.length == 0) cls = 'select';\n      let s = '';\n      s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : '';\n      s += '<select ';\n      s += fn.length > 0 ? '  onchange=\"' + fn + '\"' : '';\n      return s;\n    },\n    sld: () => '<input type=\"range\" ' + txt + ' oninput=\"' + fn + '\" onchange=\"' + fn + '\"'\n  }[tag]() || '';\n  if (id.length > 0) s += ' id=\"' + id + '\"';\n  if (cls.length > 0) s += ' class=\"' + cls + '\"';\n  if (pos == 'dib') s += ' style=\"position:relative; display:inline-block;' + style + '\"';\n  if (pos == 'rel') s += ' style=\"position:relative; ' + style + '\"';\n  if (pos == 'abs') s += ' style=\"position:absolute; ' + style + '\"';\n  s += {\n    btn: () => '>' + txt + '</button>',\n    can: () => '></canvas>',\n    div: () => ' >' + txt + '</div>',\n    edit: () => ' >' + txt + '</textarea>',\n    inp: () => '>' + (lbl.length > 0 ? '</label>' : ''),\n    out: () => ' >' + txt + '</span>' + (lbl.length > 0 ? '</label>' : ''),\n    rad: () => {\n      let s = '';\n      s += '>\\n';\n\n      for (let i = 0; i < opts.length; i++) {\n        let chk = '';\n        if (i == 0) chk = 'checked';\n        s += '<input type=\"radio\" id=\"r' + i + '\" name=\"typ\" style=\"cursor:pointer;\" value=\"' + opts[i][0] + '\" ' + chk + ' />\\n';\n        s += '<label for=\"r' + i + '\" style=\"cursor:pointer;\">' + opts[i][1] + '</label><br/>\\n';\n      }\n\n      s += '</form>';\n      return s;\n    },\n    sel: () => {\n      let s = '';\n      s += '>\\n';\n\n      for (let i = 0; i < opts.length; i++) {\n        let opt = opts[i];\n        let idStr = id + i;\n        let chkStr = opt.descr == txt ? ' selected ' : '';\n        s += '<option id=\"' + idStr + '\" value=\"' + opt.name + '\"' + chkStr + '>' + opt.descr + '</option>\\n';\n      }\n\n      s += '</select>';\n      if (lbl.length > 0) s += '</label>';\n      return s;\n    },\n    sld: () => '>'\n  }[tag]() || '';\n  s += '\\n';\n  return s.trim();\n}\n\ninit();\nexport default class Conversion {\n  convertRoman(natural) {\n    let str = String(natural).split('');\n    let result = '';\n\n    for (let i = 0; i < str.length; i++) {\n      var lookup = str[i] * Math.pow(10, str.length - i - 1);\n\n      if (roman[lookup]) {\n        result += roman[lookup];\n      }\n    }\n\n    return result;\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"sources":["/home/akhil/roman-numeral-converter/src/components/Conversion.js"],"names":["roman","my","init","version","w","h","s","wrap","tag","style","fn","cls","pos","docInsert","Level","i","v","x","levels","calcDigit","d","l","str","m","Math","pow","toRoman","n","r","c","length","eval","charAt","toArabic","num","checkRomanInput","arabic","last_digit","digit","k","alert","isInt","parseInt","get","div","document","getElementById","value","replace","trim","mode","chr","toLowerCase","createElement","innerHTML","script","currentScript","parentElement","insertBefore","id","txt","lbl","opts","mores","join","btn","can","edit","inp","out","rad","sel","sld","chk","opt","idStr","chkStr","descr","name","Conversion","convertRoman","natural","String","split","result","lookup"],"mappings":"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","sourcesContent":["const roman = {\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    20: 'XX',\n    30: 'XXX',\n    40: 'XL',\n    50: 'L',\n    60: 'LX',\n    70: 'LXX',\n    80: 'LXXX',\n    90: 'XC',\n    100: 'C',\n    200: 'CC',\n    300: 'CCC',\n    400: 'CD',\n    500: 'D',\n    600: 'DC',\n    700: 'DCC',\n    800: 'DCCC',\n    900: 'CM',\n    1000: 'M',\n    2000: 'MM',\n    3000: 'MMM'\n\n}\n\nlet my = {}\n\nfunction init() {\n    let version = '0.83'\n    let w = 360\n    let h = 64\n    let s = ''\n    s += '<div style=\"position:relative; width:' + w + 'px; height:' + h + 'px; background-color: #def; border: 2px solid #ddeeff; border-radius: 10px;  margin:auto; display:block;\">'\n    s += '<div style=\"margin-top: 10px; font: 16px arial; font-weight: bold; color: black; text-align:center;\">'\n    s += '<input id=\"val\" style=\"font-size: 20px; width:240px;  line-height: 26px;  text-align:center;\" />'\n    s += wrap({\n        tag: 'btn',\n        style: 'left:6px; bottom:3px',\n        fn: 'get()'\n    }, 'Convert'), s += '</div>'\n    s += wrap({\n        cls: 'copyrt',\n        pos: 'abs',\n        style: 'left:15px; bottom:3px'\n    }, `&copy; 2022 Rod Pierce  v${version}`)\n    s += '</div>'\n    docInsert(s)\n}\n\nfunction Level(i, v, x) {\n    this.i = i\n    this.v = v\n    this.x = x\n}\nlet levels = []\nlevels[0] = new Level('I', 'V', 'X')\nlevels[1] = new Level('X', 'L', 'C')\nlevels[2] = new Level('C', 'D', 'M')\n\nfunction calcDigit(d, l) {\n    if (l > 2) {\n        let str = ''\n        for (let m = 1; m <= d * Math.pow(10, l - 3); m++) str += 'M'\n        return str\n    } else if (d == 1) return levels[l].i\n    else if (d == 2) return levels[l].i + levels[l].i\n    else if (d == 3) return levels[l].i + levels[l].i + levels[l].i\n    else if (d == 4) return levels[l].i + levels[l].v\n    else if (d == 5) return levels[l].v\n    else if (d == 6) return levels[l].v + levels[l].i\n    else if (d == 7) return levels[l].v + levels[l].i + levels[l].i\n    else if (d == 8) return levels[l].v + levels[l].i + levels[l].i + levels[l].i\n    else if (d == 9) return levels[l].i + levels[l].x\n    else return ''\n}\n\nfunction toRoman(n) {\n    let r = ''\n    for (let c = 0; c < n.length; c++) r += calcDigit(eval(n.charAt(c)), n.length - c - 1)\n    return r\n}\n\nfunction toArabic(num) {\n    if (checkRomanInput(num)) {\n        let arabic = 0\n        let last_digit = 1000\n        for (let i = 0; i < num.length; i++) {\n            let digit = 0\n            if (num.charAt(i) == 'I') {\n                digit = 1\n            }\n            if (num.charAt(i) == 'V') {\n                digit = 5\n            }\n            if (num.charAt(i) == 'X') {\n                digit = 10\n            }\n            if (num.charAt(i) == 'L') {\n                digit = 50\n            }\n            if (num.charAt(i) == 'C') {\n                digit = 100\n            }\n            if (num.charAt(i) == 'D') {\n                digit = 500\n            }\n            if (num.charAt(i) == 'M') {\n                digit = 1000\n            }\n            if (last_digit < digit) {\n                arabic -= 2 * last_digit\n            }\n            last_digit = digit\n            arabic += last_digit\n        }\n        return arabic\n    } else {\n        return num\n    }\n}\n\nfunction checkRomanInput(num) {\n    for (let k = 0; k < num.length; k++) {\n        if (num.charAt(k) != 'I' && num.charAt(k) != 'V' && num.charAt(k) != 'X' && num.charAt(k) != 'L' && num.charAt(k) != 'C' && num.charAt(k) != 'D' && num.charAt(k) != 'M') {\n            alert('Roman Numerals can only be I, V, X, L, C, D or M')\n            return false\n        }\n    }\n    return true\n}\n\nfunction isInt(s) {\n    return s == parseInt(s, 10)\n}\n\nfunction get() {\n    let div = document.getElementById('val')\n    let str = div.value\n    str = str.replace(/[, ]+/g, '').trim()\n    let mode = 'toRoman'\n    if (!isInt(str)) {\n        for (let c = 0; c < str.length; c++) {\n            let chr = str.charAt(c).toLowerCase()\n            if (chr != 'i' && chr != 'v' && chr != 'x' && chr != 'l' && chr != 'c' && chr != 'd' && chr != 'm') {\n                alert('Only the letters IVXLCDM, please')\n                return false\n            }\n        }\n        mode = 'fromRoman'\n    }\n    if (mode == 'toRoman') div.value = toRoman(str)\n    else div.value = toArabic(str)\n    return false\n}\n\nfunction docInsert(s) {\n    let div = document.createElement('div')\n    div.innerHTML = s\n    let script = document.currentScript\n    script.parentElement.insertBefore(div, script)\n}\n\nfunction wrap({\n    id = '',\n    cls = '',\n    pos = 'rel',\n    style = '',\n    txt = '',\n    tag = 'div',\n    lbl = '',\n    fn = '',\n    opts = []\n}, ...mores) {\n    let s = ''\n    s += '\\n'\n    txt += mores.join('')\n    s += {\n        btn: () => {\n            if (cls.length == 0) cls = 'btn'\n            return '<button onclick=\"' + fn + '\"'\n        },\n        can: () => '<canvas',\n        div: () => '<div',\n        edit: () => {\n            let s = ''\n            s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : ''\n            s += '<textarea onkeyup=\"' + fn + '\" onchange=\"' + fn + '\"'\n            return s\n        },\n        inp: () => {\n            if (cls.length == 0) cls = 'input'\n            let s = ''\n            s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : ''\n            s += '<input value=\"' + txt + '\"'\n            s += fn.length > 0 ? '  oninput=\"' + fn + '\" onchange=\"' + fn + '\"' : ''\n            return s\n        },\n        out: () => {\n            pos = 'dib'\n            if (cls.length == 0) cls = 'output'\n            let s = ''\n            s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : ''\n            s += '<span '\n            return s\n        },\n        rad: () => {\n            if (cls.length == 0) cls = 'radio'\n            return '<form' + (fn.length > 0 ? (s += ' onclick=\"' + fn + '\"') : '')\n        },\n        sel: () => {\n            if (cls.length == 0) cls = 'select'\n            let s = ''\n            s += lbl.length > 0 ? '<label class=\"label\">' + lbl + ' ' : ''\n            s += '<select '\n            s += fn.length > 0 ? '  onchange=\"' + fn + '\"' : ''\n            return s\n        },\n        sld: () => '<input type=\"range\" ' + txt + ' oninput=\"' + fn + '\" onchange=\"' + fn + '\"',\n    } [tag]() || ''\n    if (id.length > 0) s += ' id=\"' + id + '\"'\n    if (cls.length > 0) s += ' class=\"' + cls + '\"'\n    if (pos == 'dib') s += ' style=\"position:relative; display:inline-block;' + style + '\"'\n    if (pos == 'rel') s += ' style=\"position:relative; ' + style + '\"'\n    if (pos == 'abs') s += ' style=\"position:absolute; ' + style + '\"'\n    s += {\n        btn: () => '>' + txt + '</button>',\n        can: () => '></canvas>',\n        div: () => ' >' + txt + '</div>',\n        edit: () => ' >' + txt + '</textarea>',\n        inp: () => '>' + (lbl.length > 0 ? '</label>' : ''),\n        out: () => ' >' + txt + '</span>' + (lbl.length > 0 ? '</label>' : ''),\n        rad: () => {\n            let s = ''\n            s += '>\\n'\n            for (let i = 0; i < opts.length; i++) {\n                let chk = ''\n                if (i == 0) chk = 'checked'\n                s += '<input type=\"radio\" id=\"r' + i + '\" name=\"typ\" style=\"cursor:pointer;\" value=\"' + opts[i][0] + '\" ' + chk + ' />\\n'\n                s += '<label for=\"r' + i + '\" style=\"cursor:pointer;\">' + opts[i][1] + '</label><br/>\\n'\n            }\n            s += '</form>'\n            return s\n        },\n        sel: () => {\n            let s = ''\n            s += '>\\n'\n            for (let i = 0; i < opts.length; i++) {\n                let opt = opts[i]\n                let idStr = id + i\n                let chkStr = opt.descr == txt ? ' selected ' : ''\n                s += '<option id=\"' + idStr + '\" value=\"' + opt.name + '\"' + chkStr + '>' + opt.descr + '</option>\\n'\n            }\n            s += '</select>'\n            if (lbl.length > 0) s += '</label>'\n            return s\n        },\n        sld: () => '>',\n    } [tag]() || ''\n    s += '\\n'\n    return s.trim()\n}\ninit()\nexport default class Conversion {\n    convertRoman(natural) {\n        let str = String(natural).split('')\n        let result = ''\n        for (let i = 0; i < str.length; i++) {\n            var lookup = str[i] * Math.pow(10, str.length - i - 1)\n            if (roman[lookup]) {\n                result += roman[lookup]\n            }\n        }\n        return result\n    }\n}"]},"metadata":{},"sourceType":"module"}